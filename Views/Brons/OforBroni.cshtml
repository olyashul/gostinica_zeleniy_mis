@model ptoba_svoego_vhoda_reg_2.Models.Bron
@{
     ViewData["Title"] = "Оформить бронирование";
}

<header >
    <nav>
        <ul style="list-style: none;">
            <li>
                <a asp-action="glav">
                    <img src="~/image/logotip2.jpg"
                         style="height: 65px; padding: 0px 20px 0px 20px">
                </a>
            </li>
            <li><a asp-controller="Brons" asp-action="glav" class="ssilki-pl" style="margin-top: -10px; ">Зеленый <br> Мыс </a></li>
            <li><a asp-controller="Brons" a asp-action="bronirovanie" class="ssilki-pl" style="padding-left: 60px;">Бронирование</a></li>
            <li><a asp-controller="Brons" a asp-action="onas" class="ssilki-pl">О нас</a></li>
            <li><a asp-controller="Brons" a asp-action="contacti" class="ssilki-pl">Контакты</a></li>
            <li>
                <a asp-controller="Users" asp-action="Profile"> <img src="~/image/profil.jpg" style="height: 80px; padding-left: 100px"></a>
            </li>

        </ul>

    </nav>
</header>


<body style="background-color:#EBEAE8;">
    <div class="row">
        <div class="col-md-6">
            <!-- Левая часть - форма бронирования -->
            <form asp-action="OforBroni" method="post" style="margin-top: 100px; margin-left:100px;">

            <p class="zagolovok_stranic">Оформить бронирование</p>

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group" style="margin-bottom:40px">
                <label asp-for="NomerId" class="control-label">Название номера</label>
                <select asp-for="NomerId" class="form-control" asp-items="ViewBag.NomerId"></select>
                <span asp-validation-for="NomerId" class="text-danger"></span>
            </div>

                <div class="form-group" style="margin-bottom:40px">
                <label asp-for="Data_zaezd" class="control-label">Дата заезда</label>
                <input type="date" asp-for="Data_zaezd" class="form-control" min="@DateTime.Today.ToString("yyyy-MM-dd")" />
                <span asp-validation-for="Data_zaezd" class="text-danger"></span>
            </div>

                <div class="form-group" style="margin-bottom:40px">
                <label asp-for="Data_viezd" class="control-label">Дата выезда</label>
                <input type="date" asp-for="Data_viezd" class="form-control" />
                <span asp-validation-for="Data_viezd" class="text-danger"></span>
            </div>

                <div id="bookedPeriods"> </div>
                <div class="form-group">
                    <label asp-for="Stoimost" class="control-label" style="font-size:140%">Итого к оплате: </label>
                    <input type="hidden" asp-for="Stoimost" id="Stoimost" />  <!-- Скрытое поле для Стоимости -->
                    <span id="totalCost"></span>
                    <span asp-validation-for="Stoimost" class="text-danger"></span>
                </div>

                <div class="form-group" style="margin-bottom:40px; margin-left:-90px">
                    <input type="submit" value="Забронировать" class="but_reg" />
                </div>


 
        </form>
        </div>
            <div class="col-md-6">
                <!-- Правая часть - информация о заселении/выселении -->
                <div class="of_zasel">
                    Заселение в номер происходит с 14:00 по местному времени,  а выселение до 12:00 по  местному
                    времени. В
                    стоимость номера входит абонемент на посещение  бассейна в отеле и завтраки.
                </p>
            </div>
            </div>


</div>
</body>



    @section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
                 $(document).ready(function() {
                    function updateBookedDates(nomerId) {
                        $.ajax({
                            url: '/Brons/AllGetBookedDates?NomerId=' + nomerId + '&_=' + new Date().getTime(),
                             cache: false,
                            type: 'GET',
                            dataType: 'json',
                            success: function(bookedPeriods) {
                                // Создаем таблицу
                                let table = $('<table class="table table-bordered"></table>');
                                let header = $('<tr><th>Занятые периоды</th></tr>');
                                table.append(header);

                                // Проверяем, что есть забронированные даты
                                if (bookedPeriods.length === 0) {
                                    let row = $('<tr><td>Нет забронированных периодов</td></tr>');
                                    table.append(row);
                                } else {
                                    // Проходим по забронированным датам и создаем строки таблицы
                                    $.each(bookedPeriods, function(index, period) {
                                        let startDate = period.startDate ? period.startDate : "Не указано";
                                        let endDate = period.endDate ? period.endDate : "Не указано";

                                        let row = $('<tr><td>' + startDate + ' - ' + endDate + '</td></tr>');
                                        table.append(row);
                                    });
                                }

                                // Вставляем таблицу в нужное место на странице
                                $("#bookedPeriods").html(table);
                            },
                            error: function(error) {
                                $("#bookedPeriods").html('<p class="alert alert-danger">Ошибка при получении данных.</p>');

                            }
                        });
                    }

                    // Пример вызова функции с передачей ID номера (NomerId)
                    // let nomerId = $("#NomerId").val(); Получаем ID номера из элемента select или input
                    // updateBookedDates(nomerId); Загружаем забронированные даты при загрузке страницы
                         let nomerId = $("#NomerId").val(); //Получаем ID номера из элемента select или input
                          updateBookedDates(nomerId); //Загружаем забронированные даты при загрузке страницы
               $("#NomerId").change(function() {
               let nomerId = $(this).val(); // Получаем ID номера после изменения выбора
               updateBookedDates(nomerId); // Загружаем забронированные даты для нового номера
           });

            // $("#NomerId").change(updateBookedDates);
            $("#Data_zaezd").after('<div id="error-message-zaezd" class="alert alert-danger" style="display:none;"></div>');
            $("#Data_viezd").after('<div id="error-message-viezd" class="alert alert-danger" style="display:none;"></div>');


            $("#Data_zaezd").change(function() {
                let date = $(this).val();
                let nomerId = $("#NomerId").val();
                let errorMessageDiv = $("#error-message-zaezd");
                $.ajax({
                    url: '/Brons/GetBookedDates?nomerId=' + nomerId + '&date=' + date,
                    type: 'GET',
                    dataType: 'json',
                    success: function(isBooked) {
                        errorMessageDiv.hide();
                        if (isBooked) {
                            errorMessageDiv.text("Извините, эта дата уже занята.").show();
                            $("#Data_zaezd").val("");
                        }
                       
                    },
                    error: function(error) {
                        let message = "Произошла ошибка при проверке даты.";
                        if (error.responseJSON && error.responseJSON.message) {
                            message = error.responseJSON.message;
                        }
                        errorMessageDiv.text(message).show();
                    }
                });
            });

            $("#Data_viezd").change(function() {
                let date = $(this).val();
                let nomerId = $("#NomerId").val();
                let errorMessageDiv = $("#error-message-viezd");
                $.ajax({
                    url: '/Brons/GetBookedDates?nomerId=' + nomerId + '&date=' + date,
                    type: 'GET',
                    dataType: 'json',
                    success: function(isBooked) {
                        errorMessageDiv.hide();
                        if (isBooked) {
                            errorMessageDiv.text("Извините, эта дата уже занята.").show();
                            $("#Data_viezd").val("");
                        }      
                    },

                    error: function(error) {
                        let message = "Произошла ошибка при проверке даты.";
                        if (error.responseJSON && error.responseJSON.message) {
                            message = error.responseJSON.message;
                        }
                        errorMessageDiv.text(message).show();
                    }
                });
            });
       

             $("#Data_viezd").change(function() {
            let date_zaezd = new Date($("#Data_zaezd").val());
            let date_viezd = new Date($(this).val());
            let errorMessageDiv = $("#error-message-zaezd");

            if (date_viezd <= date_zaezd) {
                errorMessageDiv.text("Дата выезда не может быть раньше или равна дате заезда!").show();
                $(this).val(""); // Очищаем поле даты выезда
            }
        });


        function calculateCost() {
            let nomerId = $('#NomerId').val();
            let dataZaезд = $('#Data_zaezd').val();
            let dataViезд = $('#Data_viezd').val();

            if (nomerId && dataZaезд && dataViезд) {
                $.ajax({
                    url: '/Brons/GetPricePerDay?NomerId=' + nomerId,
                    type: 'GET',
                    dataType: 'json',
                    success: function(pricePerDay) {
                        if (pricePerDay) {
                            let date1 = new Date(dataZaезд);
                            let date2 = new Date(dataViезд);
                            let diffTime = Math.abs(date2 - date1);
                            let diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

                            let totalCost = diffDays * pricePerDay;
                            $('#totalCost').text(totalCost + " руб.");
                            $('#Stoimost').val(totalCost);// Вывод в #totalCost
                        } else {
                            alert("Ошибка получения цены за сутки.");
                            $('#totalCost').text(''); // Очищаем вывод при ошибке
                        }
                    },
                    error: function() {
                        alert("Ошибка при обращении к серверу.");
                        $('#totalCost').text(''); // Очищаем вывод при ошибке
                    }
                });
            } else {
                $('#totalCost').text(''); // Очищаем вывод, если не все данные введены
            }
        }

        $('#NomerId, #Data_zaezd, #Data_viezd').change(calculateCost);
        calculateCost(); // Вызов при загрузке страницы

        });
    </script>

}
